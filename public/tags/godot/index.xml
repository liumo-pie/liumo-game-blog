<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Godot on liumo_game_blog</title>
    <link>http://localhost:1313/liumo-game-blog/tags/godot/</link>
    <description>Recent content in Godot on liumo_game_blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Aug 2025 16:14:50 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/liumo-game-blog/tags/godot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>贪吃蛇小游戏流程总结和回顾</title>
      <link>http://localhost:1313/liumo-game-blog/posts/website/first_one_hour_game_quest/</link>
      <pubDate>Fri, 29 Aug 2025 16:14:50 +0800</pubDate>
      <guid>http://localhost:1313/liumo-game-blog/posts/website/first_one_hour_game_quest/</guid>
      <description>&lt;h1 id=&#34;贪吃蛇小游戏游戏基本设计原则&#34;&gt;&#xD;&#xA;  贪吃蛇小游戏&amp;ndash;游戏基本设计原则&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e8%b4%aa%e5%90%83%e8%9b%87%e5%b0%8f%e6%b8%b8%e6%88%8f%e6%b8%b8%e6%88%8f%e5%9f%ba%e6%9c%ac%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h2 id=&#34;一问题记录&#34;&gt;&#xD;&#xA;  一.问题记录&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%b8%80%e9%97%ae%e9%a2%98%e8%ae%b0%e5%bd%95&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:什么时候要用到唯一名称访问&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;移动也不会改变&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:_physic_process这个函数是什么时候调用的，和process是什么差别&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;_physic_process是在每一帧中用积累时间判断的固定60hz的循环执行参数，用于移动、碰撞、物理的部分。&lt;br&gt;&#xA;process每帧都执行，用于动画、UI、输入、游戏逻辑。&lt;br&gt;&#xA;触发的类型事件就是用信号。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:global这种类需要继承吗&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;无需继承也能用&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:节点的移动是整个添加就可以吗 pos=head.position+move_dir*32&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;是的&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:为什么要&lt;code&gt;if pos.x&amp;lt;x_min:&#xD; pos=Vector2(x_max,pos.y)&lt;/code&gt;而不是直接pos.x=x_max&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;其实是直接return Vector2(x_max,pos.y)&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:实例化的话类型是什么&lt;code&gt;var food_create=food.instantiate()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;就是food整个场景。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:信号的函数到底放在哪里&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;涉及到主逻辑的部分就放在主场景的脚本下，其他的可以放在对应的节点中。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:不知道该怎么删除食物&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;用碰撞检测信号函数的参数直接删除 area.queue_free()&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:随机食物要写在哪里，process里面吗，但是这个每帧都会刷新吧&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;间接的信号触发&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:绑在节点上的脚本和不绑在节点上的脚本,和公用有关系吗&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;没有关系，想要用不绑在节点上的脚本，export进来变成自己的参数就好了&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:什么时候需要打包场景变量，为什么要打包场景变量&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;一般是要多次复用的场景会进行打包调用&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:group起到什么作用&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;可以起到判断的作用，area.is_in_group(&amp;ldquo;food&amp;rdquo;)&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:写move_to这个函数的时候因为是蛇头和蛇身体公用的部分，自己只创建了蛇头，moveto需要执行的对象还有目标位置两个参数一时间不知道该怎么处理了。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;解决办法就是创建一个snake类，这个类由head和snake——part共同继承，这样两者都可以轻松的调用这个函数了。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Q:为什么不会出现添加蛇尾，传入位置参数之后，last_position变动导致的错位问题&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;因为游戏执行的基本单位是帧，是按照帧内函数顺序执行的，每一帧中的数据到下一帧之前是不会改变的。贪吃蛇中的_physics_process执行完了如果触发了碰撞检测，也会执行完这个碰撞函数到下一帧再次执行_physics_process，每一帧的状态几乎是静止的。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;二流程回顾设计总结&#34;&gt;&#xD;&#xA;  二.流程回顾(设计总结)&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%ba%8c%e6%b5%81%e7%a8%8b%e5%9b%9e%e9%a1%be%e8%ae%be%e8%ae%a1%e6%80%bb%e7%bb%93&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;1场景构建&#34;&gt;&#xD;&#xA;  1.场景构建&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#1%e5%9c%ba%e6%99%af%e6%9e%84%e5%bb%ba&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;场景的叠加可以通过链接点击加到主场景中，类似于实时显示的分数条ui，spwaner代表了要加在场景上的食物和尾巴。一开始就要出现的都要链接进来，在脚本中的表现形式就是onready，节点的添加。其他的可以通过packedscene添加进来。&lt;/li&gt;&#xA;&lt;li&gt;packedscene的多复用场景const就可以。如果是ui界面记得添加一个if not 的判断。因为这里没有删除逻辑&lt;/li&gt;&#xA;&lt;li&gt;export的数据引入，需要用数据的时候，比如说资源脚本中的export，还有spwaner脚本想要用ground节点的限制，相当于是这样加成了子节点&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;2输入映射&#34;&gt;&#xD;&#xA;  2.输入映射&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#2%e8%be%93%e5%85%a5%e6%98%a0%e5%b0%84&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;h3 id=&#34;3信号系统&#34;&gt;&#xD;&#xA;  3.信号系统&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#3%e4%bf%a1%e5%8f%b7%e7%b3%bb%e7%bb%9f&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;添加信号，就直接在开头&lt;br&gt;&#xA;&lt;code&gt;signal food_eaten&lt;/code&gt;这样就相当于是添加了一个信号到这个节点上，还可以传递参数&lt;code&gt;signal health_changed(old_value, new_value)&lt;/code&gt;。信号的发送，&lt;code&gt;food_eaten.emit()&lt;/code&gt;,触发函数的编写&lt;/p&gt;</description>
    </item>
    <item>
      <title>上手用markdown记录godot项目学习流程</title>
      <link>http://localhost:1313/liumo-game-blog/posts/website/how_to_write_markdown/</link>
      <pubDate>Tue, 19 Aug 2025 14:28:29 +0800</pubDate>
      <guid>http://localhost:1313/liumo-game-blog/posts/website/how_to_write_markdown/</guid>
      <description>&lt;h1 id=&#34;进行markdown的基本语法学习&#34;&gt;&#xD;&#xA;  进行markdown的基本语法学习&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e8%bf%9b%e8%a1%8cmarkdown%e7%9a%84%e5%9f%ba%e6%9c%ac%e8%af%ad%e6%b3%95%e5%ad%a6%e4%b9%a0&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h2 id=&#34;标题-段落-换行-强调&#34;&gt;&#xD;&#xA;  标题 段落 换行 强调&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%a0%87%e9%a2%98-%e6%ae%b5%e8%90%bd-%e6%8d%a2%e8%a1%8c-%e5%bc%ba%e8%b0%83&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;标题的对应标志是#号，几级标题对应几个#号。想要分段就直接的用空行进行分段，这样就会自动的分段了。&lt;/p&gt;&#xA;&lt;p&gt;这样就是第二段。在一句话里面我想要进行强制换行，只需要&lt;br&gt;&#xA;打两个空格并且点击enter就能实现强制换行了，但是我不懂空格的作用是什么所以我现在是&#xA;直接打了一个enter来进行比对。还是需要打两个空格并且enter&lt;/p&gt;&#xA;&lt;p&gt;我又进行了一次分段，这次想要实现的是强调效果。强调有三个等级，分别是斜体，粗体还有粗斜体。强调的对应标志是*，有几个*号就是几级。_斜体_还有&lt;strong&gt;粗体&lt;/strong&gt; 还有最后的 &lt;em&gt;&lt;strong&gt;粗斜体&lt;/strong&gt;&lt;/em&gt;。这个检测的有点奇怪，等下在网站上看下效果。&lt;/p&gt;&#xA;&lt;h2 id=&#34;有序无序列表-链接行内引用图片&#34;&gt;&#xD;&#xA;  有序、无序列表 链接（行内&amp;amp;引用）图片&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%9c%89%e5%ba%8f%e6%97%a0%e5%ba%8f%e5%88%97%e8%a1%a8-%e9%93%be%e6%8e%a5%e8%a1%8c%e5%86%85%e5%bc%95%e7%94%a8%e5%9b%be%e7%89%87&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;苹果&lt;/li&gt;&#xA;&lt;li&gt;香蕉&lt;/li&gt;&#xA;&lt;li&gt;梨&#xA;数字加点号（有序列表）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;项目1&lt;/li&gt;&#xA;&lt;li&gt;项目2&#xA;&lt;ul&gt;&#xA;&lt;li&gt;子项目（空格或者tab）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;项目三&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;行内式，这是一个&lt;a href=&#34;https://www.example.com&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;链接的显示名称&lt;/a&gt;括号里面显示的是链接地址。&#xA;这是一个&lt;a href=&#34;https://www.example.com&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;引用式链接&lt;/a&gt;和另一个&lt;a href=&#34;https://www.github.com&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;引用式链接&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;图片的引用各式和链接几乎一样，只是前面加了一个！&#xA;！&lt;a href=&#34;https://example.com/cat.jpg&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;图片名称&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;代码-引用-表格-任务列表&#34;&gt;&#xD;&#xA;  代码 引用 表格 任务列表&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bb%a3%e7%a0%81-%e5%bc%95%e7%94%a8-%e8%a1%a8%e6%a0%bc-%e4%bb%bb%e5%8a%a1%e5%88%97%e8%a1%a8&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;&lt;code&gt;printf()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;hello_world&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hello,world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;大于号表示引用&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不知道拿来干什么的&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;表格还不会&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
